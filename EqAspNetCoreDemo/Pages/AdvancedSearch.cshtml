@page "/advanced-search"
@model EqAspNetCoreDemo.Pages.AdvancedSearchModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Advanced Search demo";
    ViewData["MenuTitle"] = "Advanced Search demo";

    Layout = "_Layout";
    var appPathBase = Configuration["appPathBase"] ?? "";
}
@section Styles {
    <link rel="stylesheet" href="https://cdn.korzh.com/eq/5.1.7/eq.core.min.css">
    <link rel="stylesheet" href="https://cdn.korzh.com/eq/5.1.7/eq.view.min.css">

    <style>
        .eqjs-menu-levelDiv {
            border: 1px solid silver;
            border-radius: 0 0 4px 4px;
            padding: 6px 0;
            box-shadow: 4px 8px 15px 0px rgba(0,0,0,.16);
        }

        .eqjs-menu-itemDiv {
            min-width: 158px;
            font-size: 0.9rem;
        }

        .eqjs-menu-itemDiv:hover {
            background-color: #ecf3f5 !important;
            color: #1776b1;
        }
    </style>
}

<div class="container">
    <partial name="EasyQuery/_AdvancedSearch" />
</div>

@section Scripts {
    <!-- ChartJS script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.bundle.min.js" type="text/javascript"></script>

    <!-- EasyQuery script -->
    <script src="https://cdn.korzh.com/eq/5.1.7/eq.all.min.js"></script>

    <!-- EasyQuery Advanced Search view initialization -->
    <script>
        window.addEventListener('load', function() {
            //Options for AdvancedSearchViewJQuery
            var options = {
                //Load model on start
                loadModelOnStart: true,

                //Load query on start
                loadQueryOnStart: true,

                //Default query ID
                defaultQueryId: "testQuery",

                //Default model ID
                defaultModelId: "NWindSQL",

                enableExport: true,

                locale: 'en',
                broker: {
                    endpoint: "@(appPathBase)/api/easyquery"
                },

                //Handlers
                handlers: {
                    //Error handler
                    onError: function(error) {
                        console.error(error.action + " error:\n" + error.text);
                    },

                    //Client-side list resolver
                    listRequestHandler: function(params, onResult) {
                        var processed = true;
                        if (params.listName == "RegionList") {
                            var query = this.context.getQuery();
                            var country = query.getOneValueForAttr("Customer.Country");
                            if (country == "Canada") {
                                onResult([
                                    { id: "BC", text: "British Columbia" },
                                    { id: "Quebec", text: "Quebec" }
                                ]);
                            }
                            else {
                                onResult([
                                    { id: "CA", text: "California" },
                                    { id: "CO", text: "Colorado" },
                                    { id: "OR", text: "Oregon" },
                                    { id: "WA", text: "Washington" }
                                ]);
                            }
                        }
                        else
                            processed = false;
                        return processed;
                    }
                },

                //Widgets options
                widgets: {

                    //EntitiesPanel options
                    entitiesPanel: {
                        showCheckboxes: true
                    },

                    //ColumnsPanel options
                    columnsPanel: {
                        allowAggrColumns: true,
                        allowCustomExpressions: true,
                        attrElementFormat: "{entity} {attr}",
                        titleElementFormat: "{attr}",
                        showColumnCaptions: true,
                        adjustEntitiesMenuHeight: false,
                        customExpressionText: 2,
                        showPoweredBy: false,
                        menuOptions: {
                            showSearchBoxAfter: 30,
                            activateOnMouseOver: true
                        }
                    },

                    //QueryPanel options
                    queryPanel: {
                        showPoweredBy: false,
                        alwaysShowButtonsInPredicates: false,
                        allowParameterization: true,
                        allowInJoinConditions: true,
                        autoEditNewCondition: true,
                        buttons: {
                            condition: ["menu"],
                            predicate: ["addCondition", "addPredicate", "enable", "delete"]
                        },
                        menuOptions: {
                            showSearchBoxAfter: 20,
                            activateOnMouseOver: true
                        }
                    },
                    resultGrid: {
                        formatGridCell: function(dataSet, rowIndex, colIndex, value) {
                            return value;
                        }
                    }
                },
                result: {
                    //Show EasyChart
                    showChart: true
                }
            }

            var view = new easyquery.ui.AdvancedSearchViewJQuery();
            //basic jquery dialog service implementation
            view.setDialogService(new easyquery.ui.JQueryDialogService());
            view.init(options);

            document['AdvancedSearchViewJQuery'] = view;
        });
    </script>
}
