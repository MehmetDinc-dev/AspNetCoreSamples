@{
    Layout = "_Layout";
    ViewData["Title"] = "Home Page";
    ViewData["MenuTitle"] = "Menu";
    ViewData["IsIndexPage"] = true;
}

<div class="container">
    <div class="col-md-12">
        <div class="jumbotron p-3 rounded">
            <!--<div class="col-xl-6 px-0">-->
            <p class="title-text">
                Here we demonstrate several common scenarios of EasyQuery usage with different layouts, database connections, 
		front-end frameworks, and other settings. 
                All demos were made with the help of <a href="https://korzh.com/easyquery">EasyQuery library version 5.x</a> 
                and can be easily <a href="https://korzh.com/easyquery/docs/getting-started/version-5-x">reproduced in your own projects</a>.
            </p>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card flex-md-row shadow p-3 mb-5 bg-white rounded h-md-250">
            <div class="card-body d-flex flex-column align-items-start">
                <h3 class="mb-3">
                    <a class="text-dark" href="~/advanced-search">Advanced Search</a>
                </h3>
                <p class="card-text mb-auto">Demo application that shows the most common use of EasyQuery controls.</p>
                <p class="card-text mb-auto">The page itself is implemented as a Razor Page.</p>
                <p class="card-text mb-auto">The model is loaded from the XML file but you can easily switch to loading it directly from DB connection.</p>
                <a class="mt-3" href="~/advanced-search">Open demo page</a>
            </div>
            <a href="~/advanced-search"><img class="card-img-right flex-auto d-none d-lg-block" alt="Advanced Search" src="https://korzh.com/static/images/inaction/action-mvc.png"></a>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card flex-md-row shadow p-3 mb-5 bg-white rounded h-md-250">
            <div class="card-body d-flex flex-column align-items-start">
                <h3 class="mb-3">
                    <a class="text-dark" asp-action="AdhocReporting">Ad-hoc reporting</a>
                </h3>
                <p class="card-text mb-auto">
		    This page demonstrates how to use EasyQuery to implement a custom ad hoc reporting solution in your web application. <br />
                    In this scenario we also show how EasyQuery can be integrated with ASP.NET Core authentication/authorization services.
                    So, to access this page you will need to login first.
                    You can register a new account for that or use the predefined "demo user" credentials.
                </p>
                <a class="mt-3" asp-action="AdhocReporting">Open demo page</a>
            </div>
            <a asp-action="AdhocReporting"><img class="card-img-right flex-auto d-none d-lg-block" alt="Ad-hoc reporting" src="https://korzh.com/static/images/inaction/action-report.png"></a>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card flex-md-row shadow p-3 mb-5 bg-white rounded h-md-250">
            <div class="card-body d-flex flex-column align-items-start">
                <h3 class="mb-3">
                    <a class="text-dark" href="~/data-filtering">Data Filtering</a>
                </h3>
                <p class="card-text mb-auto">Demo application that shows a special FilterBar control that works together with a data grid.</p>
                <p class="card-text mb-auto">This is a great demonstration of using EasyQuery components without the middleware part. The server side part is implemented in Controller.</p>
                <a class="mt-3" href="~/data-filtering">Open demo page</a>
            </div>
            <a href="~/data-filtering"><img class="card-img-right flex-auto d-none d-lg-block" alt="Data Filtering" src="https://korzh.com/static/images/inaction/action-filter.png"></a>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card flex-md-row shadow p-3 mb-5 bg-white rounded h-md-250">
            <div class="card-body d-flex flex-column align-items-start">
                <h3 class="mb-3">
                    <a class="text-dark" href="~/fulltext-search">Full-text Search</a>
                </h3>
                <p class="card-text mb-auto">Demonstrates how quickly you can implement a full-text search over your database.</p>
                <p class="card-text mb-auto">The view is implemented as a Razor page and does not contain any EasyQuery JavaScript code at all. All the magic happens on the code-behind class.</p>
                <a class="mt-3" href="~/fulltext-search">Open demo page</a>
            </div>
            <a href="~/fulltext-search"><img class="card-img-right flex-auto d-none d-lg-block" alt="Full-text Search" src="https://korzh.com/static/images/inaction/fulltext-search.png"></a>
        </div>
    </div>

</div>
